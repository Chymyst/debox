Debox is a Scala library providing simple collections which do not box.

It is not intended to replace Scala's built-in collections but to complement
them in cases where performance is more important than genericness. In
particular, these collection classes do not extend any class, nor any trait
that is not specialized. This means that they are not instances of Traversable,
Seq, or any other standard Scala collection interface.

Where possible, collections will provide a mutable and an immutable version.
Since these classes are mostly array-based, the underlying array will always be
mutable, but in the immutable version the array will not be shared or exposed.

Debox requires Scala 2.9 and SBT 0.11.

To run the benchmarks, simply do the following in SBT:

    erik@hex ~/debox $ sbt
    [info] Loading project definition from /home/erik/debox/project
    [info] Set current project to debox (in build file:/home/erik/debox/)
    [info] Set current project to debox (in build file:/home/erik/debox/)
    > project benchmark
    [info] Set current project to benchmark (in build file:/home/erik/debox/)
    > run

Buffer is relatively well-tested. Other parts are very much a work-in-progress.
Criticisms, suggestions and patches are all welcome, as are benchmarking
numbers (especially surprsing ones)! 

The code is available under the MIT license (found in the COPYING file).
